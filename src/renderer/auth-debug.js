// Script de diagnostic d'authentification pour EminiumLauncher
// Utilisez cette fonction dans la console du navigateur pour diagnostiquer les probl√®mes

window.debugAuthIssues = async function() {
  console.log('üîß DIAGNOSTIC D\'AUTHENTIFICATION EMINIUM LAUNCHER');
  console.log('==============================================');

  try {
    // 1. V√©rifier les √©l√©ments DOM
    console.log('\nüìã V√âRIFICATION DES √âL√âMENTS DOM:');
    const elements = {
      'Formulaire de connexion': document.getElementById('loginForm'),
      'Champ email': document.getElementById('email'),
      'Champ mot de passe': document.getElementById('password'),
      'Champ 2FA': document.getElementById('code2fa'),
      'Bouton de connexion': document.getElementById('loginBtn'),
      'Bouton OAuth': document.getElementById('oauthBtn'),
      'Section d\'authentification': document.getElementById('authSection')
    };

    Object.entries(elements).forEach(([name, element]) => {
      console.log(`${name}: ${element ? '‚úÖ' : '‚ùå'}`);
    });

    // 2. V√©rifier l'√©tat d'authentification
    console.log('\nüîê √âTAT D\'AUTHENTIFICATION:');
    if (window.AuthManager) {
      const authState = window.AuthManager.getAuthState();
      console.log('AuthManager existe:', '‚úÖ');
      console.log('√âtat d\'authentification:', authState);
    } else {
      console.log('AuthManager:', '‚ùå NON TROUV√â');
    }

    // 3. Tester la connexion r√©seau
    console.log('\nüåê TEST DE CONNEXION R√âSEAU:');
    try {
      const response = await fetch('https://eminium.ovh/verify', {
        method: 'POST',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json',
          'User-Agent': 'EminiumLauncher/1.0'
        },
        body: JSON.stringify({ access_token: 'test' }),
        signal: AbortSignal.timeout(5000)
      });

      console.log(`Serveur Eminium: ${response.ok ? '‚úÖ' : '‚ùå'} (${response.status})`);
      if (!response.ok) {
        console.log('R√©ponse du serveur:', await response.text());
      }
    } catch (error) {
      console.log('Erreur de connexion:', error.message);
    }

    // 4. V√©rifier les d√©pendances
    console.log('\nüì¶ V√âRIFICATION DES D√âPENDANCES:');
    const dependencies = {
      'DOMUtils': !!window.DOMUtils,
      'AuthManager': !!window.AuthManager,
      'Logger': !!window.Logger,
      'ErrorManager': !!window.ErrorManager,
      'UIHelpers': !!window.UIHelpers
    };

    Object.entries(dependencies).forEach(([name, exists]) => {
      console.log(`${name}: ${exists ? '‚úÖ' : '‚ùå'}`);
    });

    // 5. V√©rifier les erreurs JavaScript
    console.log('\nüêõ ERREURS JAVASCRIPT:');
    const errors = window.errorLogs || [];
    console.log(`Erreurs d√©tect√©es: ${errors.length}`);
    errors.forEach((error, index) => {
      console.log(`${index + 1}. ${error}`);
    });

    // 6. Test de d√©bogage AuthManager
    if (window.AuthManager && window.AuthManager.debugAuth) {
      console.log('\nüîß TEST DE D√âBOGAGE AUTHMANAGER:');
      const debugResult = await window.AuthManager.debugAuth();
      console.log('R√©sultat du d√©bogage:', debugResult);
    }

    console.log('\n==============================================');
    console.log('‚úÖ DIAGNOSTIC TERMIN√â');

    return {
      domElements: elements,
      authState: window.AuthManager?.getAuthState(),
      dependencies: dependencies,
      errors: errors
    };

  } catch (error) {
    console.error('‚ùå Erreur lors du diagnostic:', error);
    return { error: error.message };
  }
};

// Instructions d'utilisation
console.log(`
üìñ INSTRUCTIONS D'UTILISATION:
1. Ouvrez la console du navigateur (F12)
2. Collez et ex√©cutez: await window.debugAuthIssues()
3. V√©rifiez les r√©sultats ci-dessus
4. Les probl√®mes d√©tect√©s seront marqu√©s avec ‚ùå

üîß CORRECTIONS COURANTES:
- Si DOMUtils est manquant: V√©rifiez que dom-utils.js est charg√©
- Si AuthManager est manquant: V√©rifiez que auth-manager.js est charg√©
- Si le serveur ne r√©pond pas: V√©rifiez votre connexion internet
- Si les √©l√©ments DOM sont manquants: V√©rifiez le HTML
`);
